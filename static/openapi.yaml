openapi: 3.0.3
info:
  title: Invoice Collector Container
  version: '0.1'
servers:
  - url: https://localhost:8080/api/v1
paths:
  "/collectors":
    get:
      summary: Collectors
      description: List all the available collectors.
      responses:
        '200':
          description: List of available collectors
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/collector"
        '400':
          description: Error
  "/authorize":
    post:
      summary: Authorize
      description: Generate a token for a specific user. This token must be used by the client to authenticate itself. The user is created if it does not exist.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            "$ref": "#/components/schemas/bearer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/remote_id"
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/token"
        '400':
          description: Error
        '401':
          description: Invalid bearer token
  "/collect":
    post:
      summary: Collect invoices
      description: Request a collect of invoices for the given credential.
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            "$ref": "#/components/schemas/bearer"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/credential_id"
      responses:
        '200':
          description: Success
        '400':
          description: Error
        '401':
          description: Invalid bearer token
      callbacks:
        onInvoiceCollected:
          invoice:
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type of the payload.
                          enum:
                            - invoice
                            - error
                          example: invoice
                        key:
                          type: string
                          description: Key of the collector.
                          example: free
                        remote_id:
                          type: string
                          description: Remote id of the user.
                          example: 121439
                        invoice:
                          "$ref": "#/components/schemas/invoice"
                      required:
                        - type
                        - key
                        - invoice
              responses:
                '200':
                  description: Success
          error:
            post:
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        type:
                          type: string
                          description: Type of the payload.
                          enum:
                            - invoice
                            - error
                          example: invoice
                        key:
                          type: string
                          description: Key of the collector.
                          example: free
                        remote_id:
                          type: string
                          description: Remote id of the user.
                          example: 121439
                        error:
                          "$ref": "#/components/schemas/error"
                      required:
                        - type
                        - key
                        - error
              responses:
                '200':
                  description: Success
  "/user":
    get:
      summary: Manage credentials
      description: UI used by the user to manage its credentials.
      parameters:
        - in: query
          name: token
          required: true
          schema:
            "$ref": "#/components/schemas/token"
      responses:
        '200':
          description: Success
          content:
            text/html:
              schema:
                type: string
        '400':
          description: Error
        '401':
          description: Invalid oauth token
  "/credentials":
    get:
      summary: List credentials
      description: List all the credentials for the user.
      parameters:
        - in: query
          name: token
          required: true
          schema:
            "$ref": "#/components/schemas/token"
      responses:
        '200':
          description: Success.
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/credentials"
        '400':
          description: Error
        '401':
          description: Invalid oauth token
  "/credential":
    post:
      summary: Add credential
      description: Add a new credential for the given user.
      parameters:
        - in: query
          name: token
          required: true
          schema:
            "$ref": "#/components/schemas/token"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  description: Key of the collector to use.
                  example: free
                params:
                  type: object
                  description: Parameters required by the collector.
                  example:
                    username: fbx123456789
                    passsword: Y%2j7Fc$#$y
                    note: The company Free account
              required:
              - key
              - params
      responses:
        '200':
          description: Success
        '400':
          description: Error
        '401':
          description: Invalid oauth token
  "/credential/{id}":
    delete:
      summary: Delete credential
      description: Delete the credential for the given user.
      parameters:
        - in: query
          name: token
          required: true
          schema:
            "$ref": "#/components/schemas/token"
      responses:
        '200':
          description: Success
        '400':
          description: Error
        '401':
          description: Invalid oauth token
components:
  schemas:
    bearer:
      type: string
      description: Bearer token to authenticate the customer.
      example: Bearer <token>
    remote_id:
      type: object
      properties:
        remote_id:
          type: string
          description: Remote id of the user.
          example: 121439
      required:
      - remote_id
    token:
      type: string
      description: Token to be used by the client.
      example: 69b67c9f...be77ffeb
    credential_id:
      type: object
      properties:
        credential_id:
          type: string
          description: Id of the credentials to use to collect invoices.
          example: 6776b5258821de266afbc3f6
      required:
      - credential_id
    credentials:
      type: array
      description: List of credentials.
      items:
        type: object
        properties:
          credential_id:
            type: string
            description: Id of the credential.
            example: 6776b5258821de266afbc3f6
          note:
            type: string
            description: Custom note for this credential.
            example: Regular account
          state:
            type: string
            description: State of the credential.
            enum: [PENDING, VALID, ERROR]
            example: VALID
          error:
            type: string
            description: Error message if the state is ERROR.
            example: ""
          collector:
            "$ref": "#/components/schemas/collector"            
        required:
        - credential_id
        - note
        - state
        - error
        - collector
    pong:
      type: object
      properties:
        client:
          type: string
          description: Client that sent the request, `null` if the client could not be found.
          example: My-Company-Name
        type:
          type: string
          description: Type of the response.
          enum:
          - success
          - warning
          - error
          example: success
        message:
          type: string
          description: Message from the server.
          example: Great job! You can reach the server and you are ready to collect invoices...
      required:
      - client
      - type
      - message
    collector:
      type: object
      properties:
        key:
          type: string
          description: Key of the collector. This key is used to identify the collector in the collect request.
          example: free
        name:
          type: string
          description: Name of the collector.
          example: Free
        description:
          type: string
          description: Description of the collector.
          example: Free is a French telecommunications company
        version:
          type: string
          description: Version of the collector.
          example: 1
        website:
          type: string
          description: Link to the website of the collector.
          format: uri
          example: https://www.free.fr
        logo:
          type: string
          description: Link to the logo of the collector.
          format: uri
          example: https://fr.wikipedia.org/wiki/Free_(entreprise)#/media/Fichier:Free_logo.svg
        params:
          type: array
          description: List of parameters that the collector requires.
          items:
            - type: object
              properties:
                name:
                  type: string
                  description: Name of the parameter.
                  example: username
                description:
                  type: string
                  description: Description of the parameter.
                  example: Email address of the account
                mandatory:
                  type: boolean
                  description: Whether the parameter is mandatory or not.
                  example: true
              required:
              - name
              - description
              - mandatory
            - type: object
              properties:
                name:
                  type: string
                  description: Name of the parameter.
                  example: password
                description:
                  type: string
                  description: Description of the parameter.
                  example: Password of the account
                mandatory:
                  type: boolean
                  description: Whether the parameter is mandatory or not.
                  example: true
              required:
              - name
              - description
              - mandatory
      required:
      - collector
      - name
      - description
      - version
      - website
      - logo
      - params
    invoice:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the invoice for this collector.
          example: 45FDD1544
        type:
          type: string
          description: Type of the invoice.
          example: base64
        mime:
          type: string
          description: MIME type of the invoice.
          example: application/pdf
        timestamp:
          type: integer
          description: Timestamp when the invoice was created.
          example: 1731603196
        data:
          type: string
          description: Base64 encoded data of the invoice.
          example: iVBORw0KGgoAAAAN...RU5ErkJggg==
      required:
        - id
        - type
        - mime
        - timestamp
        - data
    error:
      type: object
      properties:
        collector:
          type: string
          description: Key of the collector where the error occurred.
          example: free
        version:
          type: string
          description: Version of the collector.
          example: 1
        name:
          type: string
          description: Name of the error.
          example: AuthenticationError
        message:
          type: string
          description: Error message.
          example: Login or password is incorrect
      required:
        - collector
        - version
        - name
        - message
